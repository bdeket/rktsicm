#lang scribble/manual

@(require (for-syntax racket/base)
          "helpers.rkt"
          (for-label sicm/kernel/matrices))

@title[#:tag "kernel/matrices"]{Matrices}
@defmodule[sicm/kernel/matrices #:packages ("rktsicm")]

@deftempproc*[
 Cramers-rule
 abstract-matrix
 am:arity
 am:id-like
 am:one-like
 am:zero-like
 array->matrix
 classical-adjoint-formula
 column-matrix
 column-matrix->up
 column-matrix->vector
 column-matrix?
 determinant-general
 determinant-numerical
 diagonal?
 down*matrix
 down->row-matrix
 easy-zero?
 general-determinant
 literal-column-matrix
 literal-matrix
 literal-row-matrix
 m:apply
 m:arity
 m:conjugate
 m:cos
 m:cross-product-column
 m:cross-product-row
 m:determinant
 m:diagonal
 m:dimension
 m:dot-product-column
 m:dot-product-row
 m:elementwise
 m:exp
 m:expt
 m:generate
 m:identity-like
 m:identity?
 m:inexact?
 m:inner-product
 m:invert
 m:make-diagonal
 m:make-identity
 m:make-zero
 m:minor
 m:negate
 m:nth-col
 m:nth-row
 m:num-cols
 m:num-rows
 m:one-like
 m:outer-product
 m:partial-derivative
 m:ref
 m:rsolve
 m:scale
 m:sin
 m:solve
 m:solve-linear
 m:square
 m:submatrix
 m:trace
 m:transpose
 m:type
 m:type-predicate
 m:zero-like
 m:zero?
 make-matrix-combination
 matinv-general
 matinv-numerical
 matrices:assign-operations
 matrix*matrix
 matrix*scalar
 matrix*up
 matrix*vector
 matrix+matrix
 matrix+scalar
 matrix->array
 matrix-binary-componentwise
 matrix-by-col-list
 matrix-by-cols
 matrix-by-row-list
 matrix-by-rows
 matrix-matrix
 matrix-ref
 matrix-scalar
 matrix-size
 matrix-with-substituted-row
 matrix/matrix
 matrix/scalar
 matrix:elementwise
 matrix:generate
 matrix=matrix
 matrix=scalar
 numerical?
 row-matrix
 row-matrix->down
 row-matrix->vector
 row-matrix?
 scalar*matrix
 scalar+matrix
 scalar-matrix
 scalar/matrix
 scalar=matrix
 set-numerical!
 set-symbolic!
 solve-general
 solve-numerical
 tag-matrix
 up->column-matrix
 vector*matrix
 vector->column-matrix
 vector->row-matrix]
